---
- name: Check if host cluster exists in OpenNebula
  ansible.builtin.command:
    cmd: >-
      onecluster show
      --user "{{ one_api_username }}"
      --password "{{ one_api_password }}"
      "{{ inventory_hostname }}"
  delegate_to: "{{ one_frontend }}"
  become: false
  no_log: true
  register: _one_cluster_check
  changed_when: false
  failed_when:
    - _one_cluster_check.rc != 0
    - "'not found' not in _one_cluster_check.stderr"

- name: Add host cluster to OpenNebula
  ansible.builtin.command:
    cmd: >-
      onecluster create
      --user "{{ one_api_username }}"
      --password "{{ one_api_password }}"
      "{{ inventory_hostname }}"
  when: _one_cluster_check.rc != 0
  delegate_to: "{{ one_frontend }}"
  become: false
  no_log: true

- name: Add host to OpenNebula
  one_host:
    api_url: "{{ one_api_url }}"
    api_username: "{{ one_api_username }}"
    api_password: "{{ one_api_password }}"
    name: "{{ inventory_hostname }}"
    im_mad_name: kvm
    vmm_mad_name: kvm
    template:
      PIN_POLICY: "{{ 'PINNED' if one_host.vms_pinned | default(false) | bool else 'NONE' }}"
      TYPE: "{{ one_host.type }}"
      VMS_THREAD: "{{ one_host.vms_per_thread | default(1) }}"
      RESERVED_CPU: "{{ one_host.reserved_cpu | default(0) }}"
      RESERVED_MEM: "{{ one_host.reserved_mem | default(0) }}"
    cluster_id: "{{ one_host.cluster_id }}"
    state: present
  delegate_to: "{{ one_frontend }}"
  become: false
  vars:
    ansible_python_interpreter: /opt/one/venv/bin/python3
